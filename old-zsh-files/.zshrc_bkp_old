
#!/bin/zsh



# OLD




# POWERLEVEL9K_WHITESPACE_BETWEEN_LEFT_SEGMENTS=""
# POWERLEVEL9K_WHITESPACE_BETWEEN_RIGHT_SEGMENTS=""


# POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=""              
# POWERLEVEL9K_LEFT_SEGMENT_SEPARATOR=""            

# POWERLEVEL9K_LEFT_SUBSEGMENT_SEPARATOR=""



# POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=" %(?:%{$fg_bold[blue]%}↓ %{$fg_bold[blue]%}(:%{$fg_bold[blue]%}↓ %{$fg_bold[blue]%}( )"      
# POWERLEVEL9K_MULTILINE_FIRST_PROMPT_SUFFIX=" %(?:%{$fg_bold[blue]%}↓ %{$fg_bold[blue]%}(:%{$fg_bold[blue]%}↓ %{$fg_bold[blue]%}( )"      
# POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX=" %(?:%{$fg_bold[blue]%}↓ %{$fg_bold[blue]%}(:%{$fg_bold[blue]%}↓ %{$fg_bold[blue]%}( )"       
# POWERLEVEL9K_MULTILINE_LAST_PROMPT_SUFFIX=" %(?:%{$fg_bold[blue]%}↓ %{$fg_bold[blue]%}(:%{$fg_bold[blue]%}↓ %{$fg_bold[blue]%}( )"       
# # POWERLEVEL9K_MULTILINE_NEWLINE_PROMPT_PREFIX="" 
# POWERLEVEL9K_MULTILINE_NEWLINE_PROMPT_SUFFIX=" %(?:%{$fg_bold[blue]%}↓ %{$fg_bold[blue]%}(:%{$fg_bold[blue]%}↓ %{$fg_bold[blue]%}( )" 






















# POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX="╭─%f"
# POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="╰─%F{008}\uF460 %f"
# POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=""
# POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="%F{008}> %f"

# POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX="╭"
# POWERLEVEL9K_MULTILINE_SECOND_PROMPT_PREFIX="❱ "
# POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="╰\uF460 "

#POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context ssh root_indicator dir_writable dir )
#POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(os_icon root_indicator context dir_writable dir vcs)
# POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(root_indicator context dir_writable dir vcs)
# POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(command_execution_time background_jobs status time ssh)

# POWERLEVEL9K_VCS_CLEAN_BACKGROUND="green"
# POWERLEVEL9K_VCS_CLEAN_FOREGROUND="$DEFAULT_BACKGROUND"
# POWERLEVEL9K_VCS_MODIFIED_BACKGROUND="yellow"
# POWERLEVEL9K_VCS_MODIFIED_FOREGROUND="$DEFAULT_BACKGROUND"
# POWERLEVEL9K_VCS_UNTRACKED_BACKGROUND="magenta"
# POWERLEVEL9K_VCS_UNTRACKED_FOREGROUND="$DEFAULT_BACKGROUND"

# POWERLEVEL9K_DIR_HOME_BACKGROUND="$DEFAULT_FOREGROUND"
# POWERLEVEL9K_DIR_HOME_FOREGROUND="$DEFAULT_BACKGROUND"
# POWERLEVEL9K_DIR_HOME_SUBFOLDER_BACKGROUND="$DEFAULT_FOREGROUND"
# POWERLEVEL9K_DIR_HOME_SUBFOLDER_FOREGROUND="$DEFAULT_BACKGROUND"
# POWERLEVEL9K_DIR_DEFAULT_BACKGROUND="$DEFAULT_FOREGROUND"
# POWERLEVEL9K_DIR_DEFAULT_FOREGROUND="$DEFAULT_BACKGROUND"
# POWERLEVEL9K_DIR_WRITABLE_FORBIDDEN_BACKGROUND="$DEFAULT_FOREGROUND"
# POWERLEVEL9K_DIR_WRITABLE_FORBIDDEN_FOREGROUND="$DEFAULT_BACKGROUND"

# POWERLEVEL9K_STATUS_OK_FOREGROUND="$DEFAULT_FOREGROUND"
# POWERLEVEL9K_STATUS_OK_FOREGROUND="green"
# POWERLEVEL9K_STATUS_OK_BACKGROUND="$DEFAULT_BACKGROUND"
# POWERLEVEL9K_STATUS_OK_BACKGROUND="$(( $DEFAULT_BACKGROUND + 2 ))"

# POWERLEVEL9K_STATUS_ERROR_FOREGROUND="$DEFAULT_FOREGROUND"
# POWERLEVEL9K_STATUS_ERROR_FOREGROUND="red"
# POWERLEVEL9K_STATUS_ERROR_BACKGROUND="$DEFAULT_BACKGROUND"
# POWERLEVEL9K_STATUS_ERROR_BACKGROUND="$(( $DEFAULT_BACKGROUND + 2 ))"

# POWERLEVEL9K_HISTORY_FOREGROUND="$DEFAULT_FOREGROUND"

# POWERLEVEL9K_TIME_FORMAT="%D{%T \uF017}" #  15:29:33
# POWERLEVEL9K_TIME_FOREGROUND="$DEFAULT_FOREGROUND"
# POWERLEVEL9K_TIME_BACKGROUND="$DEFAULT_BACKGROUND"

# POWERLEVEL9K_VCS_GIT_GITHUB_ICON=""
# POWERLEVEL9K_VCS_GIT_BITBUCKET_ICON=""
# POWERLEVEL9K_VCS_GIT_GITLAB_ICON=""
# POWERLEVEL9K_VCS_GIT_ICON=""

# POWERLEVEL9K_COMMAND_EXECUTION_TIME_FOREGROUND="$DEFAULT_BACKGROUND"
# POWERLEVEL9K_COMMAND_EXECUTION_TIME_BACKGROUND="$DEFAULT_FOREGROUND"
# POWERLEVEL9K_EXECUTION_TIME_ICON="\u23F1"

# #POWERLEVEL9K_COMMAND_EXECUTION_TIME_THRESHOLD=0
# #POWERLEVEL9K_COMMAND_EXECUTION_TIME_PRECISION=0

# POWERLEVEL9K_BACKGROUND_JOBS_FOREGROUND="$DEFAULT_BACKGROUND"
# POWERLEVEL9K_BACKGROUND_JOBS_BACKGROUND="$DEFAULT_FOREGROUND"

# POWERLEVEL9K_USER_ICON="\uF415" # 
# POWERLEVEL9K_USER_DEFAULT_FOREGROUND="$DEFAULT_FOREGROUND"
# POWERLEVEL9K_USER_DEFAULT_BACKGROUND="$DEFAULT_BACKGROUND"
# POWERLEVEL9K_USER_ROOT_FOREGROUND="$DEFAULT_FOREGROUND"
# POWERLEVEL9K_USER_ROOT_BACKGROUND="$DEFAULT_BACKGROUND"

# POWERLEVEL9K_ROOT_INDICATOR_FOREGROUND="$DEFAULT_FOREGROUND"
# POWERLEVEL9K_ROOT_INDICATOR_FOREGROUND="magenta"
# POWERLEVEL9K_ROOT_INDICATOR_BACKGROUND="$DEFAULT_BACKGROUND"
# POWERLEVEL9K_ROOT_INDICATOR_BACKGROUND="$(( $DEFAULT_BACKGROUND + 2 ))"
# POWERLEVEL9K_ROOT_INDICATOR_BACKGROUND="$(( $DEFAULT_BACKGROUND - 2 ))"
# #POWERLEVEL9K_ROOT_ICON=$'\uFF03' # ＃
# POWERLEVEL9K_ROOT_ICON=$'\uF198'  # 

# POWERLEVEL9K_SSH_FOREGROUND="$DEFAULT_FOREGROUND"
# POWERLEVEL9K_SSH_FOREGROUND="yellow"
# POWERLEVEL9K_SSH_BACKGROUND="$DEFAULT_BACKGROUND"
# POWERLEVEL9K_SSH_BACKGROUND="$(( $DEFAULT_BACKGROUND + 2 ))"
# POWERLEVEL9K_SSH_BACKGROUND="$(( $DEFAULT_BACKGROUND - 2 ))"
# POWERLEVEL9K_SSH_ICON="\uF489"  # 

# POWERLEVEL9K_HOST_LOCAL_FOREGROUND="$DEFAULT_FOREGROUND"
# POWERLEVEL9K_HOST_LOCAL_BACKGROUND="$DEFAULT_BACKGROUND"
# POWERLEVEL9K_HOST_REMOTE_FOREGROUND="$DEFAULT_FOREGROUND"
# POWERLEVEL9K_HOST_REMOTE_BACKGROUND="$DEFAULT_BACKGROUND"

# POWERLEVEL9K_HOST_ICON_FOREGROUND="$DEFAULT_FOREGROUND"
# POWERLEVEL9K_HOST_ICON_BACKGROUND="$DEFAULT_BACKGROUND"
# POWERLEVEL9K_HOST_ICON="\uF109" # 

# POWERLEVEL9K_OS_ICON_FOREGROUND="$DEFAULT_FOREGROUND"
# POWERLEVEL9K_OS_ICON_BACKGROUND="$DEFAULT_BACKGROUND"

# POWERLEVEL9K_LOAD_CRITICAL_BACKGROUND="$DEFAULT_BACKGROUND"
# POWERLEVEL9K_LOAD_WARNING_BACKGROUND="$DEFAULT_BACKGROUND"
# POWERLEVEL9K_LOAD_NORMAL_BACKGROUND="$DEFAULT_BACKGROUND"
# POWERLEVEL9K_LOAD_CRITICAL_FOREGROUND="red"
# POWERLEVEL9K_LOAD_WARNING_FOREGROUND="yellow"
# POWERLEVEL9K_LOAD_NORMAL_FOREGROUND="green"
# POWERLEVEL9K_LOAD_CRITICAL_VISUAL_IDENTIFIER_COLOR="red"
# POWERLEVEL9K_LOAD_WARNING_VISUAL_IDENTIFIER_COLOR="yellow"
# POWERLEVEL9K_LOAD_NORMAL_VISUAL_IDENTIFIER_COLOR="green"

# POWERLEVEL9K_BATTERY_LEVEL_BACKGROUND_COLOR="$DEFAULT_BACKGROUND"
# POWERLEVEL9K_BATTERY_CHARGING_BACKGROUND="$DEFAULT_BACKGROUND"
# POWERLEVEL9K_BATTERY_CHARGED_BACKGROUND="$DEFAULT_BACKGROUND"
# POWERLEVEL9K_BATTERY_DISCONNECTED_BACKGROUND="$DEFAULT_BACKGROUND"


# # =============================================================================
# #                                   Options
# # =============================================================================

# # improved less option
# export LESS="--tabs=4 --no-init --LONG-PROMPT --ignore-case --quit-if-one-screen --RAW-CONTROL-CHARS"

# # Watching other users
# #WATCHFMT="%n %a %l from %m at %t."
# watch=(notme)         # Report login/logout events for everybody except ourself.
# #watch=(all)         # Report login/logout events for everybody except ourself.
# LOGCHECK=60           # Time (seconds) between checks for login/logout activity.
# REPORTTIME=5          # Display usage statistics for commands running > 5 sec.
# #WORDCHARS="\"*?_-.[]~=/&;!#$%^(){}<>\""
# #WORDCHARS="\"*?_-[]~&;!#$%^(){}<>\""
# WORDCHARS='`~!@#$%^&*()-_=+[{]}\|;:",<.>/?'"'"

# # History
# HISTFILE=~/.zsh_history
# HISTSIZE=100000
# SAVEHIST=100000

# setopt autocd                   # Allow changing directories without `cd`
# setopt append_history           # Dont overwrite history
# setopt extended_history         # Also record time and duration of commands.
# setopt share_history            # Share history between multiple shells
# setopt hist_expire_dups_first   # Clear duplicates when trimming internal hist.
# setopt hist_find_no_dups        # Dont display duplicates during searches.
# setopt hist_ignore_dups         # Ignore consecutive duplicates.
# setopt hist_ignore_all_dups     # Remember only one unique copy of the command.
# setopt hist_reduce_blanks       # Remove superfluous blanks.
# setopt hist_save_no_dups        # Omit older commands in favor of newer ones.

# # Changing directories
# #setopt auto_pushd
# setopt pushd_ignore_dups        # Dont push copies of the same dir on stack.
# setopt pushd_minus              # Reference stack entries with "-".

# setopt extended_glob

# # =============================================================================
# #                                   Aliases
# # =============================================================================

# # In the definitions below, you will see use of function definitions instead of
# # aliases for some cases. We use this method to avoid expansion of the alias in
# # combination with the globalias plugin.

# # Directory coloring
# if [[ $OSTYPE = (darwin|freebsd)* ]]; then
#   export CLICOLOR="YES" # Equivalent to passing -G to ls.
#   export LSCOLORS="exgxdHdHcxaHaHhBhDeaec"

#   [ -d "/opt/local/bin" ] && export PATH="/opt/local/bin:$PATH"

#   # Prefer GNU version, since it respects dircolors.
#   if which gls &>/dev/null; then
#     alias ls='() { $(whence -p gls) -Ctr --file-type --color=auto $@ }'
#   else
#     alias ls='() { $(whence -p ls) -CFtr $@ }'
#   fi
# else
#   alias ls='() { $(whence -p ls) -Ctr --file-type --color=auto $@ }'
# fi

# # Set editor preference to nvim if available.
# if which nvim &>/dev/null; then
#   alias vim='() { $(whence -p nvim) $@ }'
# else
#   alias vim='() { $(whence -p vim) $@ }'
# fi

# # Generic command adaptations
# alias grep='() { $(whence -p grep) --color=auto $@ }'
# alias egrep='() { $(whence -p egrep) --color=auto $@ }'

# # Custom helper aliases
# alias ccat='highlight -O ansi'
# alias rm='rm -v'

# # Directory management
# alias la='ls -a'
# alias ll='ls -l'
# alias lal='ls -al'
# alias d='dirs -v'
# alias 1='pu'
# alias 2='pu -2'
# alias 3='pu -3'
# alias 4='pu -4'
# alias 5='pu -5'
# alias 6='pu -6'
# alias 7='pu -7'
# alias 8='pu -8'
# alias 9='pu -9'
# alias pu='() { pushd $1 &> /dev/null; dirs -v; }'
# alias po='() { popd &> /dev/null; dirs -v; }'

# zshaddhistory() { whence ${${(z)1}[1]} >| /dev/null || return 1 }

# # =============================================================================
# #                                Key Bindings
# # =============================================================================

# # Common CTRL bindings.
# bindkey "^a" beginning-of-line
# bindkey "^e" end-of-line
# bindkey "^f" forward-word
# bindkey "^b" backward-word
# bindkey "^k" kill-line
# bindkey "^d" delete-char
# bindkey "^y" accept-and-hold
# bindkey "^w" backward-kill-word
# bindkey "^u" backward-kill-line
# bindkey "^R" history-incremental-pattern-search-backward
# bindkey "^F" history-incremental-pattern-search-forward

# # Do not require a space when attempting to tab-complete.
# bindkey "^i" expand-or-complete-prefix

# # Fixes for alt-backspace and arrows keys
# bindkey '^[^?' backward-kill-word
# bindkey "^[[1;5C" forward-word
# bindkey "^[[1;5D" backward-word
# #bindkey "^[[C" forward-word
# #bindkey "^[[D" backward-word

# ## Emulate tcsh's backward-delete-word
# #tcsh-backward-kill-word () {
# #    local WORDCHARS="${WORDCHARS:s#/#}"
# #    zle backward-kill-word
# #}
# #zle -N tcsh-backward-kill-word

# # https://github.com/sickill/dotfiles/blob/master/.zsh.d/key-bindings.zsh
# tcsh-backward-word () {
#   local WORDCHARS="${WORDCHARS:s#/#}"
#   zle emacs-backward-word
# }
# zle -N tcsh-backward-word
# bindkey '\e[1;3D' tcsh-backward-word
# bindkey '\e^[[D' tcsh-backward-word # tmux

# tcsh-forward-word () {
#   local WORDCHARS="${WORDCHARS:s#/#}"
#   zle emacs-forward-word
# }
# zle -N tcsh-forward-word
# bindkey '\e[1;3C' tcsh-forward-word
# bindkey '\e^[[C' tcsh-backward-word # tmux

# tcsh-backward-delete-word () {
#   local WORDCHARS="${WORDCHARS:s#/#}"
#   zle backward-delete-word
# }
# zle -N tcsh-backward-delete-word
# bindkey "^[^?" tcsh-backward-delete-word # urxvt

# # =============================================================================
# #                                 Completions
# # =============================================================================

# zstyle ':completion:*' rehash true
# #zstyle ':completion:*' verbose yes
# #zstyle ':completion:*:descriptions' format '%B%d%b'
# #zstyle ':completion:*:messages' format '%d'
# #zstyle ':completion:*:warnings' format 'No matches for: %d'
# #zstyle ':completion:*' group-name ''

# # case-insensitive (all), partial-word and then substring completion
# zstyle ":completion:*" matcher-list \
#   "m:{a-zA-Z}={A-Za-z}" \
#   "r:|[._-]=* r:|=*" \
#   "l:|=* r:|=*"

# zstyle ":completion:*:default" list-colors ${(s.:.)LS_COLORS}




# # dircolors
# # if zplug check "seebi/dircolors-solarized"; then
# #   if which gdircolors &> /dev/null; then
# #   alias dircolors='() { $(whence -p gdircolors) }'
# #   fi
# #   if which dircolors &> /dev/null; then
# #     scheme="dircolors.256dark"
# #     eval $(dircolors ~/.zplug/repos/seebi/dircolors-solarized/$scheme)
# #   fi
# # fi


# # # highlighting
# # if zplug check "zsh-users/zsh-syntax-highlighting"; then
# #   #ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=10'
# #   ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor)
# #   ZSH_HIGHLIGHT_PATTERNS=('rm -rf *' 'fg=white,bold,bg=red')

# #   typeset -A ZSH_HIGHLIGHT_STYLES
# #   ZSH_HIGHLIGHT_STYLES[cursor]='bg=yellow'
# #   ZSH_HIGHLIGHT_STYLES[globbing]='none'
# #   ZSH_HIGHLIGHT_STYLES[path]='fg=white'
# #   ZSH_HIGHLIGHT_STYLES[path_pathseparator]='fg=grey'
# #   ZSH_HIGHLIGHT_STYLES[alias]='fg=cyan'
# #   ZSH_HIGHLIGHT_STYLES[builtin]='fg=cyan'
# #   ZSH_HIGHLIGHT_STYLES[function]='fg=cyan'
# #   ZSH_HIGHLIGHT_STYLES[command]='fg=green'
# #   ZSH_HIGHLIGHT_STYLES[precommand]='fg=green'
# #   ZSH_HIGHLIGHT_STYLES[hashed-command]='fg=green'
# #   ZSH_HIGHLIGHT_STYLES[commandseparator]='fg=yellow'
# #   ZSH_HIGHLIGHT_STYLES[redirection]='fg=magenta'
#   ZSH_HIGHLIGHT_STYLES[bracket-level-1]='fg=cyan,bold'
#   ZSH_HIGHLIGHT_STYLES[bracket-level-2]='fg=green,bold'
#   ZSH_HIGHLIGHT_STYLES[bracket-level-3]='fg=magenta,bold'
#   ZSH_HIGHLIGHT_STYLES[bracket-level-4]='fg=yellow,bold'
# fi























# =============================================================================
# #                                   Functions
# # =============================================================================
# powerlevel9k_random_color(){
#   local code
#   #for code ({000..255}) echo -n "$%F{$code}"
#   #code=$[${RANDOM}%11+10]    # random between 10-20
#   code=$[${RANDOM}%211+20]    # random between 20-230
#   printf "%03d" $code
# }

# zsh_wifi_signal(){
#   local signal=$(nmcli -t device wifi | grep '^*' | awk -F':' '{print $6}')
#     local color="yellow"
#     [[ $signal -gt 75 ]] && color="green"
#     [[ $signal -lt 50 ]] && color="red"
#     echo -n "%F{$color}\uf1eb" # \uf1eb is 
# }

# # =============================================================================
# #                                   Variables
# # =============================================================================
# export LANG="en_US.UTF-8"
# export LC_ALL="en_US.UTF-8"

# export FZF_DEFAULT_OPTS='--height 40% --reverse --border --inline-info --color=dark,bg+:235,hl+:10,pointer:5'

# export ENHANCD_FILTER="fzf:peco:percol"
# export ENHANCD_COMMAND='c'

# # =============================================================================
# #                                   Plugins
# # =============================================================================
# # Check if zplug is installed

# [ ! -d ~/.zplug ] && git clone https://github.com/zplug/zplug ~/.zplug
# source ~/.zplug/init.zsh

# # zplug
# zplug 'zplug/zplug', hook-build:'zplug --self-manage'

# # oh-my-zsh
# #zplug "zplug/zplug"
# #zplug "robbyrussell/oh-my-zsh", use:"lib/*.zsh"

# # Miscellaneous commands
# #zplug "andrewferrier/fzf-z"
# zplug "k4rthik/git-cal",  as:command
# zplug "peco/peco",        as:command, from:gh-r
# zplug "junegunn/fzf-bin", as:command, from:gh-r, rename-to:fzf, \
#   use:"*${(L)$(uname -s)}*amd64*"
# zplug "junegunn/fzf", use:"shell/*.zsh", as:plugin

# # Enhanced cd
# zplug "b4b4r07/enhancd", use:init.sh

# # Bookmarks and jump
# zplug "jocelynmallon/zshmarks"

# # Enhanced dir list with git features
# zplug "supercrabtree/k"

# # Jump back to parent directory
# zplug "tarrasch/zsh-bd"

# # Simple zsh calculator
# zplug "arzzen/calc.plugin.zsh"

# # Directory colors
# zplug "seebi/dircolors-solarized", ignore:"*", as:plugin

# # Load theme
# zplug "bhilburn/powerlevel9k", use:powerlevel9k.zsh-theme

# zplug "plugins/common-aliase",     from:oh-my-zsh
# zplug "plugins/colored-man-pages", from:oh-my-zsh
# zplug "plugins/colorize",          from:oh-my-zsh
# zplug "plugins/command-not-found", from:oh-my-zsh
# zplug "plugins/copydir",           from:oh-my-zsh
# zplug "plugins/copyfile",          from:oh-my-zsh
# zplug "plugins/cp",                from:oh-my-zsh
# zplug "plugins/dircycle",          from:oh-my-zsh
# zplug "plugins/encode64",          from:oh-my-zsh
# zplug "plugins/extract",           from:oh-my-zsh
# zplug "plugins/history",           from:oh-my-zsh
# zplug "plugins/tmux",              from:oh-my-zsh
# zplug "plugins/tmuxinator",        from:oh-my-zsh
# zplug "plugins/urltools",          from:oh-my-zsh
# zplug "plugins/web-search",        from:oh-my-zsh
# zplug "plugins/z",                 from:oh-my-zsh
# zplug "plugins/fancy-ctrl-z",      from:oh-my-zsh

# # Supports oh-my-zsh plugins and the like
# if [[ $OSTYPE = (linux)* ]]; then
#     zplug "plugins/archlinux",     from:oh-my-zsh, if:"(( $+commands[pacman] ))"
#     zplug "plugins/dnf",           from:oh-my-zsh, if:"(( $+commands[dnf] ))"
# fi

# if [[ $OSTYPE = (darwin)* ]]; then
#     zplug "lib/clipboard",         from:oh-my-zsh
#     zplug "plugins/osx",           from:oh-my-zsh
#     zplug "plugins/brew",          from:oh-my-zsh, if:"(( $+commands[brew] ))"
#     zplug "plugins/macports",      from:oh-my-zsh, if:"(( $+commands[port] ))"
# fi

# zplug "plugins/git",               from:oh-my-zsh, if:"(( $+commands[git] ))"
# zplug "plugins/golang",            from:oh-my-zsh, if:"(( $+commands[go] ))"
# zplug "plugins/svn",               from:oh-my-zsh, if:"(( $+commands[svn] ))"
# zplug "plugins/node",              from:oh-my-zsh, if:"(( $+commands[node] ))"
# zplug "plugins/npm",               from:oh-my-zsh, if:"(( $+commands[npm] ))"
# zplug "plugins/bundler",           from:oh-my-zsh, if:"(( $+commands[bundler] ))"
# zplug "plugins/gem",               from:oh-my-zsh, if:"(( $+commands[gem] ))"
# zplug "plugins/rbenv",             from:oh-my-zsh, if:"(( $+commands[rbenv] ))"
# zplug "plugins/rvm",               from:oh-my-zsh, if:"(( $+commands[rvm] ))"
# zplug "plugins/pip",               from:oh-my-zsh, if:"(( $+commands[pip] ))"
# zplug "plugins/sudo",              from:oh-my-zsh, if:"(( $+commands[sudo] ))"
# zplug "plugins/gpg-agent",         from:oh-my-zsh, if:"(( $+commands[gpg-agent] ))"
# zplug "plugins/systemd",           from:oh-my-zsh, if:"(( $+commands[systemctl] ))"
# zplug "plugins/docker",            from:oh-my-zsh, if:"(( $+commands[docker] ))"
# zplug "plugins/docker-compose",    from:oh-my-zsh, if:"(( $+commands[docker-compose] ))"

# #zplug "djui/alias-tips"
# zplug "hlissner/zsh-autopair", defer:2
# zplug "zsh-users/zsh-completions"
# zplug "zsh-users/zsh-autosuggestions"
# # zsh-syntax-highlighting must be loaded after executing compinit command
# # and sourcing other plugins
# zplug "zsh-users/zsh-syntax-highlighting", defer:2
# zplug "zsh-users/zsh-history-substring-search", defer:3

# # =============================================================================
# #                                   Options
# # =============================================================================

# # improved less option
# export LESS="--tabs=4 --no-init --LONG-PROMPT --ignore-case --quit-if-one-screen --RAW-CONTROL-CHARS"

# # Watching other users
# #WATCHFMT="%n %a %l from %m at %t."
# watch=(notme)         # Report login/logout events for everybody except ourself.
# LOGCHECK=60           # Time (seconds) between checks for login/logout activity.
# REPORTTIME=5          # Display usage statistics for commands running > 5 sec.

# # Key timeout and character sequences
# KEYTIMEOUT=1
# WORDCHARS='*?_-[]~=./&;!#$%^(){}<>'

# # History
# HISTFILE=~/.zsh_history
# HISTSIZE=10000
# SAVEHIST=$HISTSIZE

# setopt autocd                   # Allow changing directories without `cd`
# setopt append_history           # Dont overwrite history
# setopt extended_history         # Also record time and duration of commands.
# setopt share_history            # Share history between multiple shells
# setopt hist_expire_dups_first   # Clear duplicates when trimming internal hist.
# setopt hist_find_no_dups        # Dont display duplicates during searches.
# setopt hist_ignore_dups         # Ignore consecutive duplicates.
# setopt hist_ignore_all_dups     # Remember only one unique copy of the command.
# setopt hist_reduce_blanks       # Remove superfluous blanks.
# setopt hist_save_no_dups        # Omit older commands in favor of newer ones.
# setopt hist_ignore_space        # Ignore commands that start with space.

# # Changing directories
# #setopt auto_pushd
# setopt pushd_ignore_dups        # Dont push copies of the same dir on stack.
# setopt pushd_minus              # Reference stack entries with "-".

# setopt extended_glob

# # =============================================================================
# #                                   Aliases
# # =============================================================================

# # In the definitions below, you will see use of function definitions instead of
# # aliases for some cases. We use this method to avoid expansion of the alias in
# # combination with the globalias plugin.

# # Directory coloring
# if [[ $OSTYPE = (darwin|freebsd)* ]]; then
#   export CLICOLOR="YES" # Equivalent to passing -G to ls.
#   export LSCOLORS="exgxdHdHcxaHaHhBhDeaec"

#   [ -d "/opt/local/bin" ] && export PATH="/opt/local/bin:$PATH"

#   # Prefer GNU version, since it respects dircolors.
#   if (( $+commands[gls] )); then
#     alias ls='() { $(whence -p gls) -Ctr --file-type --color=auto $@ }'
#   else
#     alias ls='() { $(whence -p ls) -CFtr $@ }'
#   fi
# else
#   alias ls='() { $(whence -p ls) -Ctr --file-type --color=auto $@ }'
# fi

# # Set editor preference to nvim if available.
# if (( $+commands[nvim] )); then
#   alias vim='() { $(whence -p nvim) $@ }'
# else
#   alias vim='() { $(whence -p vim) $@ }'
# fi

# # Generic command adaptations
# alias grep='() { $(whence -p grep) --color=auto $@ }'
# alias egrep='() { $(whence -p egrep) --color=auto $@ }'

# # Custom helper aliases
# alias ccat='highlight -O ansi'
# alias rm='rm -v'

# # Directory management
# alias la='ls -a'
# alias ll='ls -l'
# alias lal='ls -al'
# alias d='dirs -v'
# alias 1='pu'
# alias 2='pu -2'
# alias 3='pu -3'
# alias 4='pu -4'
# alias 5='pu -5'
# alias 6='pu -6'
# alias 7='pu -7'
# alias 8='pu -8'
# alias 9='pu -9'
# alias pu='() { pushd $1 &> /dev/null; dirs -v; }'
# alias po='() { popd &> /dev/null; dirs -v; }'

# zshaddhistory() { whence ${${(z)1}[1]} >| /dev/null || return 1 }

# # =============================================================================
# #                                Key Bindings
# # =============================================================================

# # Common CTRL bindings.
# bindkey "^a" beginning-of-line
# bindkey "^e" end-of-line
# bindkey "^f" forward-word
# bindkey "^b" backward-word
# bindkey "^k" kill-line
# bindkey "^d" delete-char
# bindkey "^y" accept-and-hold
# bindkey "^w" backward-kill-word
# bindkey "^u" backward-kill-line
# bindkey "^R" history-incremental-pattern-search-backward
# bindkey "^F" history-incremental-pattern-search-forward

# # Do not require a space when attempting to tab-complete.
# bindkey "^i" expand-or-complete-prefix

# # Fixes for alt-backspace and arrows keys
# bindkey '^[^?' backward-kill-word
# bindkey "^[[1;5C" forward-word
# bindkey "^[[1;5D" backward-word
# #bindkey "^[[C" forward-word
# #bindkey "^[[D" backward-word

# ## Emulate tcsh's backward-delete-word
# #tcsh-backward-kill-word () {
# #    local WORDCHARS="${WORDCHARS:s#/#}"
# #    zle backward-kill-word
# #}
# #zle -N tcsh-backward-kill-word

# # https://github.com/sickill/dotfiles/blob/master/.zsh.d/key-bindings.zsh
# tcsh-backward-word () {
#   local WORDCHARS="${WORDCHARS:s#./#}"
#   zle emacs-backward-word
# }
# zle -N tcsh-backward-word
# bindkey '\e[1;3D' tcsh-backward-word
# bindkey '\e^[[D' tcsh-backward-word # tmux

# tcsh-forward-word () {
#   local WORDCHARS="${WORDCHARS:s#./#}"
#   zle emacs-forward-word
# }
# zle -N tcsh-forward-word
# bindkey '\e[1;3C' tcsh-forward-word
# bindkey '\e^[[C' tcsh-backward-word # tmux

# tcsh-backward-delete-word () {
#   local WORDCHARS="${WORDCHARS:s#./#}"
#   zle backward-delete-word
# }
# zle -N tcsh-backward-delete-word
# bindkey "^[^?" tcsh-backward-delete-word # urxvt

# # =============================================================================
# #                                 Completions
# # =============================================================================

# zstyle ':completion:*' rehash true
# #zstyle ':completion:*' verbose yes
# #zstyle ':completion:*:descriptions' format '%B%d%b'
# #zstyle ':completion:*:messages' format '%d'
# #zstyle ':completion:*:warnings' format 'No matches for: %d'
# #zstyle ':completion:*' group-name ''

# # case-insensitive (all), partial-word and then substring completion
# zstyle ":completion:*" matcher-list \
#   "m:{a-zA-Z}={A-Za-z}" \
#   "r:|[._-]=* r:|=*" \
#   "l:|=* r:|=*"

# zstyle ":completion:*:default" list-colors ${(s.:.)LS_COLORS}

# # =============================================================================
# #                                   Startup
# # =============================================================================

# # Load SSH and GPG agents via keychain.
# setup_agents() {
#   [[ $UID -eq 0 ]] && return

#   if (( $+commands[keychain] )); then
#   local -a ssh_keys gpg_keys
#   for i in ~/.ssh/**/*pub; do test -f "$i(.N:r)" && ssh_keys+=("$i(.N:r)"); done
#   gpg_keys=$(gpg -K --with-colons 2>/dev/null | awk -F : '$1 == "sec" { print $5 }')
#     if (( $#ssh_keys > 0 )) || (( $#gpg_keys > 0 )); then
#     alias run_agents='() { $(whence -p keychain) --quiet --eval --inherit any-once --agents ssh,gpg $ssh_keys ${(f)gpg_keys} }'
#     #[[ -t ${fd:-0} || -p /dev/stdin ]] && eval `run_agents`
#     unalias run_agents
#     fi
#   fi
# }

# setup_agents
# unfunction setup_agents

# # Install plugins if there are plugins that have not been installed
# if ! zplug check; then
#     printf "Install plugins? [y/N]: "
#     if read -q; then
#         echo; zplug install
#     fi
# fi

# if zplug check "seebi/dircolors-solarized"; then
#   which gdircolors &> /dev/null && alias dircolors='() { $(whence -p gdircolors) }'
#   which dircolors &> /dev/null && \
#     eval $(dircolors ~/.zplug/repos/seebi/dircolors-solarized/dircolors.256dark)
# fi

# if zplug check "zsh-users/zsh-history-substring-search"; then
#   zmodload zsh/terminfo
#   bindkey "$terminfo[kcuu1]" history-substring-search-up
#   bindkey "$terminfo[kcud1]" history-substring-search-down
#   bindkey "^[[1;5A" history-substring-search-up
#   bindkey "^[[1;5B" history-substring-search-down
# fi

# if zplug check "zsh-users/zsh-syntax-highlighting"; then
#   #ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=10'
#   ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor line)
#   ZSH_HIGHLIGHT_PATTERNS=('rm -rf *' 'fg=white,bold,bg=red')

#   typeset -A ZSH_HIGHLIGHT_STYLES
#   ZSH_HIGHLIGHT_STYLES[cursor]='bg=yellow'
#   ZSH_HIGHLIGHT_STYLES[globbing]='none'
#   ZSH_HIGHLIGHT_STYLES[path]='fg=white'
#   ZSH_HIGHLIGHT_STYLES[path_pathseparator]='fg=grey'
#   ZSH_HIGHLIGHT_STYLES[alias]='fg=cyan'
#   ZSH_HIGHLIGHT_STYLES[builtin]='fg=cyan'
#   ZSH_HIGHLIGHT_STYLES[function]='fg=cyan'
#   ZSH_HIGHLIGHT_STYLES[command]='fg=green'
#   ZSH_HIGHLIGHT_STYLES[precommand]='fg=green'
#   ZSH_HIGHLIGHT_STYLES[hashed-command]='fg=green'
#   ZSH_HIGHLIGHT_STYLES[commandseparator]='fg=yellow'
#   ZSH_HIGHLIGHT_STYLES[redirection]='fg=magenta'
#   ZSH_HIGHLIGHT_STYLES[bracket-level-1]='fg=cyan,bold'
#   ZSH_HIGHLIGHT_STYLES[bracket-level-2]='fg=green,bold'
#   ZSH_HIGHLIGHT_STYLES[bracket-level-3]='fg=magenta,bold'
#   ZSH_HIGHLIGHT_STYLES[bracket-level-4]='fg=yellow,bold'
# fi

# if zplug check "b4b4r07/enhancd"; then
#     ENHANCD_DOT_SHOW_FULLPATH=1
#   ENHANCD_DISABLE_HOME=0
# fi

# if zplug check "b4b4r07/zsh-history-enhanced"; then
#   ZSH_HISTORY_FILE="$HISTFILE"
#     ZSH_HISTORY_FILTER="fzf:peco:percol"
#     ZSH_HISTORY_KEYBIND_GET_BY_DIR="^r"
#     ZSH_HISTORY_KEYBIND_GET_ALL="^r^a"
# fi

# if zplug check "bhilburn/powerlevel9k"; then
#     # Easily switch primary foreground/background colors
#     DEFAULT_FOREGROUND=006 DEFAULT_BACKGROUND=235
#     DEFAULT_COLOR=$DEFAULT_FOREGROUND

#     # powerlevel9k prompt theme
#     #DEFAULT_USER=$USER

#     POWERLEVEL9K_MODE="nerdfont-complete"
#     POWERLEVEL9K_SHORTEN_DIR_LENGTH=1
#     #POWERLEVEL9K_SHORTEN_STRATEGY="truncate_right"

#     POWERLEVEL9K_DIR_OMIT_FIRST_CHARACTER=false

#     POWERLEVEL9K_ALWAYS_SHOW_CONTEXT=true
#     POWERLEVEL9K_ALWAYS_SHOW_USER=false

#     POWERLEVEL9K_CONTEXT_TEMPLATE="\uF109 %m"

#     POWERLEVEL9K_CONTEXT_DEFAULT_FOREGROUND="$DEFAULT_FOREGROUND"
#     POWERLEVEL9K_CONTEXT_DEFAULT_BACKGROUND="$DEFAULT_BACKGROUND"
#     POWERLEVEL9K_CONTEXT_ROOT_FOREGROUND="$DEFAULT_FOREGROUND"
#     POWERLEVEL9K_CONTEXT_ROOT_BACKGROUND="$DEFAULT_BACKGROUND"

#     POWERLEVEL9K_LEFT_SEGMENT_SEPARATOR="\uE0B4"
#     POWERLEVEL9K_LEFT_SUBSEGMENT_SEPARATOR="%F{$(( $DEFAULT_BACKGROUND - 2 ))}|%f"
#     POWERLEVEL9K_RIGHT_SEGMENT_SEPARATOR="\uE0B6"
#     POWERLEVEL9K_RIGHT_SUBSEGMENT_SEPARATOR="%F{$(( $DEFAULT_BACKGROUND - 2 ))}|%f"

#     POWERLEVEL9K_PROMPT_ON_NEWLINE=true
#     POWERLEVEL9K_RPROMPT_ON_NEWLINE=false

#     POWERLEVEL9K_STATUS_VERBOSE=true
#     POWERLEVEL9K_STATUS_CROSS=true
#     POWERLEVEL9K_PROMPT_ADD_NEWLINE=true

#     #POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX="%F{cyan}\u256D\u2500%f"
#     #POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="%F{014}\u2570%F{cyan}\uF460%F{073}\uF460%F{109}\uF460%f "
#     #POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX="╭─%f"
#     #POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="╰─%F{008}\uF460 %f"
#     #POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=""
#     #POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="%F{008}> %f"

#     POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX="╭"
#     #POWERLEVEL9K_MULTILINE_SECOND_PROMPT_PREFIX="❱ "
#     POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="╰\uF460 "

#     #POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context ssh root_indicator dir_writable dir )
#     #POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(os_icon root_indicator context dir_writable dir vcs)
#     POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(root_indicator context dir_writable dir vcs)
#     POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(command_execution_time background_jobs status time ssh)

#     POWERLEVEL9K_VCS_CLEAN_BACKGROUND="green"
#     POWERLEVEL9K_VCS_CLEAN_FOREGROUND="$DEFAULT_BACKGROUND"
#     POWERLEVEL9K_VCS_MODIFIED_BACKGROUND="yellow"
#     POWERLEVEL9K_VCS_MODIFIED_FOREGROUND="$DEFAULT_BACKGROUND"
#     POWERLEVEL9K_VCS_UNTRACKED_BACKGROUND="magenta"
#     POWERLEVEL9K_VCS_UNTRACKED_FOREGROUND="$DEFAULT_BACKGROUND"

#     POWERLEVEL9K_DIR_HOME_BACKGROUND="$DEFAULT_FOREGROUND"
#     POWERLEVEL9K_DIR_HOME_FOREGROUND="$DEFAULT_BACKGROUND"
#     POWERLEVEL9K_DIR_HOME_SUBFOLDER_BACKGROUND="$DEFAULT_FOREGROUND"
#     POWERLEVEL9K_DIR_HOME_SUBFOLDER_FOREGROUND="$DEFAULT_BACKGROUND"
#     POWERLEVEL9K_DIR_DEFAULT_BACKGROUND="$DEFAULT_FOREGROUND"
#     POWERLEVEL9K_DIR_DEFAULT_FOREGROUND="$DEFAULT_BACKGROUND"
#     POWERLEVEL9K_DIR_WRITABLE_FORBIDDEN_BACKGROUND="$DEFAULT_FOREGROUND"
#     POWERLEVEL9K_DIR_WRITABLE_FORBIDDEN_FOREGROUND="$DEFAULT_BACKGROUND"

#     POWERLEVEL9K_STATUS_OK_FOREGROUND="$DEFAULT_FOREGROUND"
#     POWERLEVEL9K_STATUS_OK_FOREGROUND="green"
#     POWERLEVEL9K_STATUS_OK_BACKGROUND="$DEFAULT_BACKGROUND"
#     POWERLEVEL9K_STATUS_OK_BACKGROUND="$(( $DEFAULT_BACKGROUND + 2 ))"

#     POWERLEVEL9K_STATUS_ERROR_FOREGROUND="$DEFAULT_FOREGROUND"
#     POWERLEVEL9K_STATUS_ERROR_FOREGROUND="red"
#     POWERLEVEL9K_STATUS_ERROR_BACKGROUND="$DEFAULT_BACKGROUND"
#     POWERLEVEL9K_STATUS_ERROR_BACKGROUND="$(( $DEFAULT_BACKGROUND + 2 ))"

#     POWERLEVEL9K_HISTORY_FOREGROUND="$DEFAULT_FOREGROUND"

#     POWERLEVEL9K_TIME_FORMAT="%D{%T \uF017}" #  15:29:33
#     POWERLEVEL9K_TIME_FOREGROUND="$DEFAULT_FOREGROUND"
#     POWERLEVEL9K_TIME_BACKGROUND="$DEFAULT_BACKGROUND"

#     POWERLEVEL9K_VCS_GIT_GITHUB_ICON=""
#     POWERLEVEL9K_VCS_GIT_BITBUCKET_ICON=""
#     POWERLEVEL9K_VCS_GIT_GITLAB_ICON=""
#     POWERLEVEL9K_VCS_GIT_ICON=""

#     POWERLEVEL9K_COMMAND_EXECUTION_TIME_FOREGROUND="$DEFAULT_BACKGROUND"
#     POWERLEVEL9K_COMMAND_EXECUTION_TIME_BACKGROUND="$DEFAULT_FOREGROUND"
#     POWERLEVEL9K_EXECUTION_TIME_ICON="\u23F1"

#     #POWERLEVEL9K_COMMAND_EXECUTION_TIME_THRESHOLD=0
#     #POWERLEVEL9K_COMMAND_EXECUTION_TIME_PRECISION=0

#     POWERLEVEL9K_BACKGROUND_JOBS_FOREGROUND="$DEFAULT_BACKGROUND"
#     POWERLEVEL9K_BACKGROUND_JOBS_BACKGROUND="$DEFAULT_FOREGROUND"

#     POWERLEVEL9K_USER_ICON="\uF415" # 
#     POWERLEVEL9K_USER_DEFAULT_FOREGROUND="$DEFAULT_FOREGROUND"
#     POWERLEVEL9K_USER_DEFAULT_BACKGROUND="$DEFAULT_BACKGROUND"
#     POWERLEVEL9K_USER_ROOT_FOREGROUND="$DEFAULT_FOREGROUND"
#     POWERLEVEL9K_USER_ROOT_BACKGROUND="$DEFAULT_BACKGROUND"

#     POWERLEVEL9K_ROOT_INDICATOR_FOREGROUND="$DEFAULT_FOREGROUND"
#     POWERLEVEL9K_ROOT_INDICATOR_FOREGROUND="magenta"
#     POWERLEVEL9K_ROOT_INDICATOR_BACKGROUND="$DEFAULT_BACKGROUND"
#     POWERLEVEL9K_ROOT_INDICATOR_BACKGROUND="$(( $DEFAULT_BACKGROUND + 2 ))"
#     POWERLEVEL9K_ROOT_INDICATOR_BACKGROUND="$(( $DEFAULT_BACKGROUND - 2 ))"
#     #POWERLEVEL9K_ROOT_ICON=$'\uFF03' # ＃
#     POWERLEVEL9K_ROOT_ICON=$'\uF198'  # 

#     POWERLEVEL9K_SSH_FOREGROUND="$DEFAULT_FOREGROUND"
#     POWERLEVEL9K_SSH_FOREGROUND="yellow"
#     POWERLEVEL9K_SSH_BACKGROUND="$DEFAULT_BACKGROUND"
#     POWERLEVEL9K_SSH_BACKGROUND="$(( $DEFAULT_BACKGROUND + 2 ))"
#     POWERLEVEL9K_SSH_BACKGROUND="$(( $DEFAULT_BACKGROUND - 2 ))"
#     POWERLEVEL9K_SSH_ICON="\uF489"  # 

#     POWERLEVEL9K_HOST_LOCAL_FOREGROUND="$DEFAULT_FOREGROUND"
#     POWERLEVEL9K_HOST_LOCAL_BACKGROUND="$DEFAULT_BACKGROUND"
#     POWERLEVEL9K_HOST_REMOTE_FOREGROUND="$DEFAULT_FOREGROUND"
#     POWERLEVEL9K_HOST_REMOTE_BACKGROUND="$DEFAULT_BACKGROUND"

#     POWERLEVEL9K_HOST_ICON_FOREGROUND="$DEFAULT_FOREGROUND"
#     POWERLEVEL9K_HOST_ICON_BACKGROUND="$DEFAULT_BACKGROUND"
#     POWERLEVEL9K_HOST_ICON="\uF109" # 

#     POWERLEVEL9K_OS_ICON_FOREGROUND="$DEFAULT_FOREGROUND"
#     POWERLEVEL9K_OS_ICON_BACKGROUND="$DEFAULT_BACKGROUND"

#     POWERLEVEL9K_LOAD_CRITICAL_BACKGROUND="$DEFAULT_BACKGROUND"
#     POWERLEVEL9K_LOAD_WARNING_BACKGROUND="$DEFAULT_BACKGROUND"
#     POWERLEVEL9K_LOAD_NORMAL_BACKGROUND="$DEFAULT_BACKGROUND"
#     POWERLEVEL9K_LOAD_CRITICAL_FOREGROUND="red"
#     POWERLEVEL9K_LOAD_WARNING_FOREGROUND="yellow"
#     POWERLEVEL9K_LOAD_NORMAL_FOREGROUND="green"
#     POWERLEVEL9K_LOAD_CRITICAL_VISUAL_IDENTIFIER_COLOR="red"
#     POWERLEVEL9K_LOAD_WARNING_VISUAL_IDENTIFIER_COLOR="yellow"
#     POWERLEVEL9K_LOAD_NORMAL_VISUAL_IDENTIFIER_COLOR="green"

#     POWERLEVEL9K_BATTERY_LEVEL_BACKGROUND_COLOR="$DEFAULT_BACKGROUND"
#     POWERLEVEL9K_BATTERY_CHARGING_BACKGROUND="$DEFAULT_BACKGROUND"
#     POWERLEVEL9K_BATTERY_CHARGED_BACKGROUND="$DEFAULT_BACKGROUND"
#     POWERLEVEL9K_BATTERY_DISCONNECTED_BACKGROUND="$DEFAULT_BACKGROUND"
# fi

# Then, source plugins and add commands to $PATH
# zplug load

# [ -d "$HOME/bin" ] && export PATH="$HOME/bin:$PATH"

# # Source defined functions.
# [[ -f ~/.zsh_functions ]] && source ~/.zsh_functions

# # Source local customizations.
# [[ -f ~/.zsh_rclocal ]] && source ~/.zsh_rclocal

# # Source exports and aliases.
# [[ -f ~/.zsh_exports ]] && source ~/.zsh_exports
# [[ -f ~/.zsh_aliases ]] && source ~/.zsh_aliases

#ZLE_RPROMPT_INDENT=0

# New


# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

function powerline_precmd() {
    PS1="$(powerline-shell --shell zsh $?)"
}

function install_powerline_precmd() {
  for s in "${precmd_functions[@]}"; do
    if [ "$s" = "powerline_precmd" ]; then
      return
    fi
  done
  precmd_functions+=(powerline_precmd)
}

if [ "$TERM" != "linux" ]; then
    install_powerline_precmd
fi
unsetopt no_match












export TERM="xterm-256color"
export NVM_DIR="$HOME/.nvm"
export ZSH=~/.oh-my-zsh

# export ZSH=~/.oh-my-zsh
export PATH="$HOME/.rbenv/bin:$PATH"
export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"
# eval "$(rbenv init -)"
# export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"
# export PATH="$HOME/.rbenv/bin:$PATH"


source ~/.local/bin/virtualenvwrapper.sh
source $ZSH/oh-my-zsh.sh
source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
source ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source ~/.oh-my-zsh/custom/themes/powerlevel9k/powerlevel9k.zsh-theme
# source  ~/powerlevel9k/powerlevel9k.zsh-theme

[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion


source <(kubectl completion zsh)
fpath=(~/.zsh/completion $fpath)
autoload -Uz compinit && compinit -i

source <(kubeadm completion zsh)


###-begin-index.js-completions-###
#
# yargs command completion script
#
# Installation: ./src/index.js completion >> ~/.bashrc
#    or ./src/index.js completion >> ~/.bash_profile on OSX.
#
_yargs_completions()
{
    local cur_word args type_list

    cur_word="${COMP_WORDS[COMP_CWORD]}"
    args=("${COMP_WORDS[@]}")

    # ask yargs to generate completions.
    type_list=$(api-init --get-yargs-completions "${args[@]}")

    COMPREPLY=( $(compgen -W "${type_list}" -- ${cur_word}) )

    # if no match was found, fall back to filename completion
    if [ ${#COMPREPLY[@]} -eq 0 ]; then
      COMPREPLY=()
    fi

    return 0
}
complete -o default -F _yargs_completions api-init
###-end-index.js-completions-###



# Path to your oh-my-zsh installation.

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
# ZSH_THEME="robbyrussell"

# Set list of themes to load
# Setting this variable when ZSH_THEME=random
# cause zsh load theme from this variable instead of
# looking in ~/.oh-my-zsh/themes/
# An empty array have no effect
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
# plugins=( git bundler dotenv osx rake rbenv ruby colored-man-pages npm nvm )
# plugins=( git dotenv ruby colored-man-pages npm nvm gem )
plugins=(
  git
  bundler
  dotenv
  osx
  rake
  rbenv
  ruby
  gem
  colored-man-pages
)

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"




# ZSH_THEME="powerlevel9k/powerlevel9k"
ZSH_THEME="powerlevel9k/powerlevel9k"

# POWERLEVEL9K_MODE='fontawesome-regular'
POWERLEVEL9K_MODE='awesome-fontconfig'
# zsh-syntax-highlighting
# Change defaults
POWERLEVEL9K_STATUS_VERBOSE=false
POWERLEVEL9K_DIR_OMIT_FIRST_CHARACTER=true
POWERLEVEL9K_CHANGESET_HASH_LENGTH=6
POWERLEVEL9K_SHOW_CHANGESET=true


# POWERLEVEL9K_PROMPT_ADD_NEWLINE=true

# POWERLEVEL9K_LEFT_SUBSEGMENT_SEPARATOR=""
# POWERLEVEL9K_RIGHT_SUBSEGMENT_SEPARATOR=""
# POWERLEVEL9K_MODE='awesome-patched'
# POWERLEVEL9K_MODE='compatible'
# POWERLEVEL9K_MODE='nerdfont-complete'

# POWERLEVEL9K_MODE='SourceCodePro+Powerline+Awesome Regular'

# POWERLEVEL9K_MODE='nerdfont-complete'



# POWERLEVEL9K_NODE_VERSION_BACKGROUND="blue"


# POWERLINE9K_FOLDER_ICON='⚡'
# POWERLEVEL9K_FOLDER_ICON=''

ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor)
ZSH_HIGHLIGHT_STYLES[cursor]='bold'

ZSH_HIGHLIGHT_STYLES[alias]='fg=green,bold'
ZSH_HIGHLIGHT_STYLES[suffix-alias]='fg=green,bold'
ZSH_HIGHLIGHT_STYLES[builtin]='fg=green,bold'
ZSH_HIGHLIGHT_STYLES[function]='fg=green,bold'
ZSH_HIGHLIGHT_STYLES[command]='fg=green,bold'
ZSH_HIGHLIGHT_STYLES[precommand]='fg=green,bold'
ZSH_HIGHLIGHT_STYLES[hashed-command]='fg=green,bold'

# 📂📁







# POWERLEVEL9K SETTINGS ##
POWERLEVEL9K_STATUS_VERBOSE=false
POWERLEVEL9K_STATUS_OK_IN_NON_VERBOSE=true

POWERLEVEL9K_PROMPT_ON_NEWLINE=false
POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=''
# POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="%K{black}%F{black}  %f%k%F{black}%f "
POWERLEVEL9K_SHORTEN_DIR_LENGTH=2
# POWERLEVEL9K_SHORTEN_DIR_PREFIX='..'
POWERLEVEL9K_DIR_WRITABLE_FORBIDDEN_FOREGROUND="red"
POWERLEVEL9K_DIR_WRITABLE="echo 🔐"
POWERLEVEL9K_DIR_WRITABLE_FORBIDDEN_BACKGROUND="black"
POWERLEVEL9K_DIR_HOME_BACKGROUND="black"
POWERLEVEL9K_DIR_HOME_FOREGROUND="grey"
POWERLEVEL9K_DIR_HOME_SUBFOLDER_BACKGROUND="013"
POWERLEVEL9K_DIR_HOME_SUBFOLDER_BACKGROUND="013"
POWERLEVEL9K_DIR_HOME_BACKGROUND="013"
POWERLEVEL9K_DIR_HOME_SUBFOLDER_FOREGROUND="239"
POWERLEVEL9K_DIR_DEFAULT_BACKGROUND="black"
POWERLEVEL9K_DIR_DEFAULT_FOREGROUND="124"

# POWERLEVEL9K_VCS_CLEAN_BACKGROUND="black"
# POWERLEVEL9K_VCS_CLEAN_FOREGROUND="green"
# POWERLEVEL9K_VCS_MODIFIED_BACKGROUND="black"
# POWERLEVEL9K_VCS_UNTRACKED_BACKGROUND="black"
# POWERLEVEL9K_VCS_MODIFIED_FOREGROUND="yellow"
# POWERLEVEL9K_VCS_UNTRACKED_FOREGROUND="yellow"
# POWERLEVEL9K_DIR_HOME_FOREGROUND='red'
# POWERLEVEL9K_DIR_BACKGROUND='red'
# POWERLEVEL9K_PROMPT_ADD_NEWLINE=true

POWERLEVEL9K_ROOT_INDICATOR_FOREGROUND='white'
POWERLEVEL9K_ROOT_INDICATOR_BACKGROUND="002"

# POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX="↱"
# POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="↳ "
# VCS_GIT_GITLAB_ICON="⚡"

# POWERLEVEL9K_MODE='nerdfont-complete'

POWERLEVEL9K_CUSTOM_OS_ICON="echo 🐧"
POWERLEVEL9K_CUSTOM_OS_ICON="echo 🔥️"
# " %(?:%{$fg_bold[green]%}➜ :%{$fg_bold[red]%}🐧 )"
# POWERLEVEL9K_CUSTOM_OS_ICON="echo ☕🐧"
POWERLEVEL9K_CUSTOM_OS_ICON_BACKGROUND="021"

POWERLEVEL9K_CUSTOM_WRITABLE_ICON="echo 🔐"
POWERLEVEL9K_CUSTOM_WRITABLE_ICON_BACKGROUND="124"


POWERLEVEL9K_CUSTOM_STATUS_OK_ICON="echo 👍"
POWERLEVEL9K_STATUS_ICON_OK='echo 👍'
POWERLEVEL9K_NODE_VERSION='green'


zsh_last_c (){
  if [[ $LAST_EXIT_CODE -ne 0 ]]; then
    # local EXIT_CODE_PROMPT=' '
    local CUSTOM_STATUS_ICON='' 
    CUSTOM_STATUS_ICON="👎"
    echo '$CUSTOM_STATUS_ICON'
    # EXIT_CODE_PROMPT+="%{$fg[red]%}-%{$reset_color%}"
    # EXIT_CODE_PROMPT+="%{$fg_bold[red]%}$LAST_EXIT_CODE%{$reset_color%}"
    # EXIT_CODE_PROMPT+="%{$fg[red]%}-%{$reset_color%}"
    # echo "$EXIT_CODE_PROMPT"
  fi
}


# ⬢
# 
 # ⬢ 

# if (( $? == 0 )); then; echo true; else; echo false; fi
# if  ( exit $? ) ; then; echo true; else; echo false; fi

function check_last_exit_code() {
  local LAST_EXIT_CODE=$?
  if [[ $LAST_EXIT_CODE -ne 0 ]]; then
    local EXIT_CODE_PROMPT=' '
    EXIT_CODE_PROMPT+="%{$fg[red]%}-%{$reset_color%}"
    EXIT_CODE_PROMPT+="%{$fg_bold[red]%}$LAST_EXIT_CODE%{$reset_color%}"
    EXIT_CODE_PROMPT+="%{$fg[red]%}-%{$reset_color%}"
    echo "$EXIT_CODE_PROMPT"
  fi
}

# POWERLEVEL9K_CUSTOM_STATUS_ICON="$(check_last_exit_code)"
# POWERLEVEL9K_RUBY_ICON=''
# POWERLEVEL9K_LOAD_ICON='⏳'
# 






# POWERLEVEL9K_DIR_WRITABLE_ICON='echo 🔐'
# POWERLEVEL9K_PYTHON_ICON="🐍"
# POWERLEVEL9K_RAM_ICON='💿'

POWERLEVEL9K_LOCK_ICON='🔐'
POWERLEVEL9K_LOCK_ICON_BACKGROUND='-1'
POWERLEVEL9K_LOCK_BACKGROUND='-1'
POWERLEVEL9K_VCS_GIT_GITLAB_ICON='🦊'
POWERLEVEL9K_VCS_GIT_GITHUB_ICON=' '
POWERLEVEL9K_VCS_GIT_BITBUCKET_ICON="" 
POWERLEVEL9K_VCS_GIT_BITBUCKET_ICON="%{$bg[blue]%}"
POWERLEVEL9K_RAM_ICON='💽️'
# POWERLEVEL9K_RAM_ICON=''
# 
# 
POWERLEVEL9K_AWS_EB_ICON="🌱" 
POWERLEVEL9K_AWS_ICON=""
POWERLEVEL9K_BATTERY_ICON="🔋"
POWERLEVEL9K_FREEBSD_ICON="😈"
POWERLEVEL9K_SUNOS_ICON='🌞' 
POWERLEVEL9K_ROOT_ICON="⚡"
POWERLEVEL9K_EXECUTION_TIME_ICON="⏳"
POWERLEVEL9K_NODE_ICON='⬢'
POWERLEVEL9K_CARRIAGE_RETURN_ICON='↩'
POWERLEVEL9K_FAIL_ICON='✘'
POWERLEVEL9K_OK_ICON="✔"  
POWERLEVEL9K_GO_ICON=""
POWERLEVEL9K_VCS_INCOMING_CHANGES_ICON='↓'
POWERLEVEL9K_VCS_OUTGOING_CHANGES_ICON='↑'
POWERLEVEL9K_VCS_REMOTE_BRANCH_ICON='→'
POWERLEVEL9K_VCS_STAGED_ICON='✚'
POWERLEVEL9K_VCS_BRANCH_ICON=" "
# POWERLEVEL9K_LINUX_ICON="🐧  "
# 👹️

# ☢️


# 🎃️

# 🔥️

# 🛠️
POWERLEVEL9K_LINUX_ICON="☕️"
POWERLEVEL9K_APPLE_ICON="🍎"
POWERLEVEL9K_VCS_TAG_ICON=""
POWERLEVEL9K_TEST_ICON=""
POWERLEVEL9K_SWAP_ICON=""
POWERLEVEL9K_BACKGROUND_JOBS_ICON=""
POWERLEVEL9K_SERVER_ICON=""
POWERLEVEL9K_SSH_ICON=""
POWERLEVEL9K_OS_ICON_BACKGROUND='-1'

# color 236


#    node icon auxiliar
#  go icon 




# POWERLEVEL9K_NODE_FOREGROUND='green'
# POWERLEVEL9K_NODE_VERSION_BACKGROUND='blue'
# POWERLEVEL9K_OK_ICON='✅'
# POWERLEVEL9K_FAIL_ICON="💣"
# POWERLEVEL9K_TODO_ICON='📔'
# POWERLEVEL9K_VCS_TAG_ICON='🛒'
# POWERLEVEL9K_CUSTOM_PYTHON="echo 🐍 $(python3 --version)"
# # POWERLEVEL9K_VCS_BRANCH_ICON=''
# POWERLEVEL9K_VCS_INCOMING_CHANGES_ICON='⬇'
# POWERLEVEL9K_VCS_OUTGOING_CHANGES_ICON='⬆'
# POWERLEVEL9K_CUSTOM_NEW_LINE='echo ↪'
# POWERLEVEL9K_VCS_COMMIT_ICON='📑 '
# POWERLEVEL9K_CUSTOM_NEW_LINE_BACKGROUND='238'

POWERLEVEL9K_HOME_ICON=$'🏠'
POWERLEVEL9K_HOME_SUB_ICON='📂'
POWERLEVEL9K_FOLDER_ICON='📁'


POWERLEVEL9K_HOME_FOLDER_ABBREVIATION='~'

POWERLEVEL9K_RUBY_ICON="♦️"
 # 😄
POWERLEVEL9K_DIR_DEFAULT_BACKGROUND='-1'
POWERLEVEL9K_DIR_HOME_BACKGROUND="-1"
POWERLEVEL9K_DIR_HOME_SUBFOLDER_BACKGROUND="-1"

POWERLEVEL9K_DIR_DEFAULT_FOREGROUND='12'
POWERLEVEL9K_DIR_HOME_FOREGROUND="12"
POWERLEVEL9K_DIR_HOME_SUBFOLDER_FOREGROUND="12"


POWERLEVEL9K_STATUS_OK_BACKGROUND='041'
POWERLEVEL9K_STATUS_OK_FOREGROUND='082'
POWERLEVEL9K_NODE_VERSION_BACKGROUND='-1'
POWERLEVEL9K_NODE_VERSION_FOREGROUND='47'
POWERLEVEL9K_RAM_BACKGROUND='-1'
POWERLEVEL9K_RAM_FOREGROUND='124'
POWERLEVEL9K_VCS_CLEAN_BACKGROUND='-1'
POWERLEVEL9K_VCS_UNTRACKED_BACKGROUND='-1'




POWERLEVEL9K_VCS_CLEAN_FOREGROUND=""
POWERLEVEL9K_VCS_MODIFIED_FOREGROUND=""
POWERLEVEL9K_VCS_UNTRACKED_FOREGROUND=""


# POWERLEVEL9K_VCS_GIT_GITHUB_ICON=""
# POWERLEVEL9K_VCS_GIT_GITLAB_ICON=""
# POWERLEVEL9K_VCS_GIT_HOOKS=""
# POWERLEVEL9K_VCS_HG_HOOKS=""
# POWERLEVEL9K_VCS_HIDE_TAGS=""
# POWERLEVEL9K_VCS_INTERNAL_HASH_LENGTH=""
# POWERLEVEL9K_VCS_SHOW_SUBMODULE_DIRTY=""
# POWERLEVEL9K_VCS_SVN_HOOKS=""

# POWERLEVEL9K_VCS_CLEAN_FOREGROUND="236"
# POWERLEVEL9K_VCS_MODIFIED_FOREGROUND="236"
# POWERLEVEL9K_VCS_UNTRACKED_FOREGROUND="236"
# POWERLEVEL9K_VCS_GIT_GITHUB_ICON_FOREGROUND="236"
# POWERLEVEL9K_VCS_GIT_GITLAB_ICON_FOREGROUND="236"
# POWERLEVEL9K_VCS_GIT_HOOKS_FOREGROUND="236"
# POWERLEVEL9K_VCS_HG_HOOKS_FOREGROUND="236"
# POWERLEVEL9K_VCS_HIDE_TAGS_FOREGROUND="236"
# POWERLEVEL9K_VCS_INTERNAL_HASH_LENGTH_FOREGROUND="236"
# POWERLEVEL9K_VCS_SHOW_SUBMODULE_DIRTY_FOREGROUND="236"
# POWERLEVEL9K_VCS_SVN_HOOKS_FOREGROUND="236"

POWERLEVEL9K_VCS_CLEAN_BACKGROUND="-1"
POWERLEVEL9K_VCS_MODIFIED_BACKGROUND="-1"
POWERLEVEL9K_VCS_UNTRACKED_BACKGROUND="-1"
POWERLEVEL9K_VCS_GIT_GITHUB_ICON_BACKGROUND="-1"
POWERLEVEL9K_VCS_GIT_GITLAB_ICON_BACKGROUND="-1"
POWERLEVEL9K_VCS_GIT_HOOKS_BACKGROUND="-1"
POWERLEVEL9K_VCS_HG_HOOKS_BACKGROUND="-1"
POWERLEVEL9K_VCS_HIDE_TAGS_BACKGROUND="-1"
POWERLEVEL9K_VCS_INTERNAL_HASH_LENGTH_BACKGROUND="-1"
POWERLEVEL9K_VCS_SHOW_SUBMODULE_DIRTY_BACKGROUND="-1"
POWERLEVEL9K_VCS_SVN_HOOKS_BACKGROUND="-1"



POWERLEVEL9K_CUSTOM_NPM='echo 📦 $(pnpm -v)'
POWERLEVEL9K_CUSTOM_NPM_BACKGROUND="-1"





POWERLEVEL9K_SHORTEN_DELIMITER='...'
# source "~/.oh-my-zsh/themes/"
# 
# 
# 




#plugins=( git dotenv ruby colored-man-pages npm nvm heroku )





prompt_echo() {
    local content='Hello World!'
    $1_prompt_segment "$0" "$2" "blue" "red" "$content" "#"
}


POWERLEVEL9K_CUSTOM_END="echo ')'"
POWERLEVEL9K_CUSTOM_END_BACKGROUND="-1"
POWERLEVEL9K_CUSTOM_END_FOREGROUND="blue"



POWERLEVEL9K_CUSTOM_INIT="echo '('"
POWERLEVEL9K_CUSTOM_INIT_BACKGROUND="-1"
POWERLEVEL9K_CUSTOM_INIT_FOREGROUND="blue"

# 👹️

# ☢️


# 🎃️

# 🍀️

# ☕️

# 💻️

# 🔥️

# 🛠️

# 💽️


# 💾️


# 💿️

# POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="%K{black}%F{black}  %f%k%F{black}%f "
POWERLEVEL9K_RIGHT_SEGMENT_SEPARATOR=$'\uE0B3'
# POWERLEVEL9K_DIR_WRITABLE_FORBIDDEN=''
POWERLEVEL9K_VIRTUALENV_BACKGROUND='-1'
POWERLEVEL9K_VIRTUALENV_PREFIX='('

POWERLEVEL9K_DIR_WRITABLE_FORBIDDEN_BACKGROUND='-1'
POWERLEVEL9K_DIR_WRITABLE_BACKGROUND='-1'
POWERLEVEL9K_HOST_LOCAL_BACKGROUND='-1'
POWERLEVEL9K_USER_BACKGROUND='-1'
P9KGT_BACKGROUND='-1'
POWERLEVEL9K_CUSTOM_USER="echo 💻️ $(hostname) ☕️ $USER"
POWERLEVEL9K_CUSTOM_USER_BACKGROUND="-1"
POWERLEVEL9K_CUSTOM_USER_FOREGROUND="-1"
POWERLEVEL9K_TIME_BACKGROUND='-1'
AUX="%{$time%}"
POWERLEVEL9K_CUSTOM_TIME='echo ⏲️  $(date +%H:%M:%S)'
POWERLEVEL9K_CUSTOM_TIME='echo ⏲️  $(date +%H:%M)'
POWERLEVEL9K_CUSTOM_TIME_BACKGROUND="-1"
POWERLEVEL9K_NVM_BACKGROUND="-1"

# POWERLEVEL9K_USER_ICON="\uF415"
# POWERLEVEL9K_USER_ICON_BACKGROUND="-1"
# POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=( 'root_indicator' 'os_icon'     'dir_writable'  'dir' 'custom_end' 'vcs' 'newline'    'custom_npm' 'pyenv'  'ram'   )
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=( 'root_indicator' 'virtualenv' 'nvm' 'custom_time'     'dir_writable'  'dir'  'newline'     'pyenv' 'custom_user'  'ram'  'vcs' )
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=( 'root_indicator' 'virtualenv'  'custom_time'     'dir_writable'  'dir'  'newline'     'pyenv' 'custom_user'  'ram'  'vcs' )
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(  'node_version' 'custom_npm'   )
# POWERLEVEL9K_RIGHT_SEGMENT_CUSTOM_OS_ICON=$"💣"
POWERLEVEL9K_CUSTOM_OS_ICON_RPROMPT_PREFIX=$"💣"


POWERLEVEL9K_DISABLE_RPROMPT=false
POWERLEVEL9K_CUSTOM_OS_ICON_BACKGROUND='21'
POWERLEVEL9K_CUSTOM_OS_ICON_FOREGROUND='2'
POWERLEVEL9K_CUSTOM_OS_ICON_PREFIX_BACKGROUND='2'
# POWERLEVEL9K_CUSTOM_OS_ICON_LEFT_SEGMENT_SEPARATOR=""
# source $ZSH/oh-my-zsh.sh

# source $ZSH/oh-my-zsh.sh
# zsh-theme="blinks"
# source ~/.fonts/*.sh
# source $ZSH/oh-my-zsh.sh
# source ~/.bash-powerline.sh
#exec tmux

# export PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"
# export MANPATH="/home/linuxbrew/.linuxbrew/share/man:$MANPATH"
# export INFOPATH="/home/linuxbrew/.linuxbrew/share/info:$INFOPATH"

DEFAULT_FOREGROUND=006 DEFAULT_BACKGROUND=235
DEFAULT_COLOR=$DEFAULT_FOREGROUND

POWERLEVEL9K_DIR_OMIT_FIRST_CHARACTER=false

POWERLEVEL9K_ALWAYS_SHOW_CONTEXT=true
POWERLEVEL9K_ALWAYS_SHOW_USER=true


# POWERLEVEL9K_CONTEXT_DEFAULT_FOREGROUND="$DEFAULT_FOREGROUND"
# POWERLEVEL9K_CONTEXT_DEFAULT_BACKGROUND="$DEFAULT_BACKGROUND"
# POWERLEVEL9K_CONTEXT_ROOT_FOREGROUND="$DEFAULT_FOREGROUND"
# POWERLEVEL9K_CONTEXT_ROOT_BACKGROUND="$DEFAULT_BACKGROUND"



# POWERLEVEL9K_LEFT_SEGMENT_SEPARATOR="%F{black}%f"
POWERLEVEL9K_LEFT_SEGMENT_SEPARATOR="%F{black}%f"
POWERLEVEL9K_LEFT_SUBSEGMENT_SEPARATOR="%F{$(( $DEFAULT_BACKGROUND - 2 ))}%f"
# POWERLEVEL9K_LEFT_SUBSEGMENT_SEPARATOR="%F{$(( $DEFAULT_BACKGROUND - 2 ))}|%f"
POWERLEVEL9K_RIGHT_SEGMENT_SEPARATOR="%F{black}%f"
POWERLEVEL9K_RIGHT_SUBSEGMENT_SEPARATOR="%F{$(( $DEFAULT_BACKGROUND - 2 ))}|%f"
POWERLEVEL9K_RIGHT_SUBSEGMENT_SEPARATOR="%F{$(( $DEFAULT_BACKGROUND - 2 ))}%f"

POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_RPROMPT_ON_NEWLINE=false
POWERLEVEL9K_RPROMPT_ON_NEWLINE=true


POWERLEVEL9K_STATUS_VERBOSE=true
POWERLEVEL9K_STATUS_CROSS=true

# POWERLEVEL9K_PROMPT_ADD_NEWLINE=true

# POWERLEVEL9K_MULTILINE_NEWLINE_PROMPT_PREFIX=" %(?:%{$fg_bold[green]%}➜ :%{$fg_bold[red]%}➜ )"
# POWERLEVEL9K_MULTILINE_NEWLINE_PROMPT_PREFIX=" %(?:%{$fg_bold[blue]%}↓ :%{$fg_bold[blue]%}↓ )"
POWERLEVEL9K_MULTILINE_NEWLINE_PROMPT_PREFIX=" %(?:%{$fg_bold[blue]%}↓ :%{$fg_bold[red]%}↓ )"
POWERLEVEL9K_MULTILINE_NEWLINE_PROMPT_PREFIX=" %(?:%{$fg_bold[blue]%} :%{$fg_bold[red]%} )"
POWERLEVEL9K_MULTILINE_NEWLINE_PROMPT_PREFIX=""

# POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX="%F{cyan}\u256D\u2500%f"
# POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=" %(?:%{$fg_bold[green]%}➜ :%{$fg_bold[red]%}➜ )"
# POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=" %(?:%{$fg_bold[blue]%}↓ %{$fg_bold[blue]%}:%{$fg_bold[blue]%}↓ %{$fg_bold[blue]%} )"
# POWERLEVEL9K_MULTILINE_FIRST_PROMPT_SUFFIX=" %(?:%{$fg_bold[green]%}↓ %{$fg_bold[blue]%}:%{$fg_bold[red]%}↓ %{$fg_bold[blue]%} )"
# POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=" %(?:%{$fg_bold[blue]%}↓ %{$fg_bold[blue]%}:%{$fg_bold[blue]%}↓ %{$fg_bold[blue]%} )"
# POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="%F{014}\u2570%F{cyan}\uF460%F{073}\uF460%F{109}\uF460%f "
# POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="%F{014}\u2570%F{cyan}▶ "
POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX=" %(?:%{$fg_bold[blue]%} ➜  :%{$fg_bold[red]%} ➜  )"
POWERLEVEL9K_MULTILINE_LAST_PROMPT_SUFFIX=" %(?:%{$fg_bold[blue]%} ➜  :%{$fg_bold[red]%} ➜  )"


POWERLEVEL9K_USER_BACKGROUND='-1'                    

# vim: ft=zsh
local ret_status="%(?:%{$fg_bold[green]%}➜ :%{$fg_bold[red]%}➜ )"
PROMPT='${ret_status} %{$fg[cyan]%}%c%{$reset_color%} $(git_prompt_info)'

ZSH_THEME_GIT_PROMPT_PREFIX="%{$fg_bold[blue]%}git:(%{$fg[red]%}"
ZSH_THEME_GIT_PROMPT_SUFFIX="%{$reset_color%} "
ZSH_THEME_GIT_PROMPT_DIRTY="%{$fg[blue]%}) %{$fg[yellow]%}✗"
ZSH_THEME_GIT_PROMPT_CLEAN="%{$fg[blue]%})"

 
# alias pi=''
# ATUAL=$(pwd)
# alias pi='ATUAL=$(pwd) ;cd ~/.mypypi; pip download  && cd $ATUAL'
# alias pi3='ATUAL=$(pwd) ;cd ~/.mypypi; pip3 download && cd $ATUAL '

alias p='pwd'
alias rm='rm -i'
alias np='pnpm'
alias npo='pnpm --offline'
alias k='killall -g -I'
alias n='nano '
alias c='cat'
alias npmv='mpv --vid=no '


alias pioff='pip install --user --no-index --find-links=file://$HOME/.mypypi '
alias pi3off='pip3 install --user --no-index --find-links=file://$HOME/.mypypi '
# cd $ATUAL
pi(){# echo "${*:1}"
	# shift 
	# echo $@
	ATUAL=$(pwd)
	cd ~/.mypypi
	pip download $@
	bkpPIP
	# pip install --user --no-index --find-links=file://$HOME/.mypypi $@
	# pip download $1 $2 $3 $4 $5 $6 $7 $8 $9 $10 $11 $12 $13 $14 $15 $16 $17 $18 $19 $20 $21 $22 $23 $24 $25 $26 $27 $28 $29 $30 $31 $32 $33 $34 $35 $36 $37 $38 $39 $40 $41 $42 $43 $44 $45 $46 $47 $48 $49 $50 $51 $52 $53 $54 $55 $56 $57 $58 $59 $60 $61 $62 $63 $64 $65 $66 $67 $68 $69 $70 $71 $72 $73 $74 $75 $76 $77 $78 $79 $80 $81 $82 $83 $84 $85 $86 $87 $88 $89 $90 $91 $92 $93 $94 $95 $96 $97 $98 $99 
	cd $ATUAL
}


pi3(){
	# echo "${*:1}"
	# shift 
	# echo $@
	ATUAL=$(pwd)
	cd ~/.mypypi
	pip download $@
	bkpPIP
	# pip3 install --user --no-index --find-links=file://$HOME/.mypypi $@
	# pip download $1 $2 $3 $4 $5 $6 $7 $8 $9 $10 $11 $12 $13 $14 $15 $16 $17 $18 $19 $20 $21 $22 $23 $24 $25 $26 $27 $28 $29 $30 $31 $32 $33 $34 $35 $36 $37 $38 $39 $40 $41 $42 $43 $44 $45 $46 $47 $48 $49 $50 $51 $52 $53 $54 $55 $56 $57 $58 $59 $60 $61 $62 $63 $64 $65 $66 $67 $68 $69 $70 $71 $72 $73 $74 $75 $76 $77 $78 $79 $80 $81 $82 $83 $84 $85 $86 $87 $88 $89 $90 $91 $92 $93 $94 $95 $96 $97 $98 $99 
	cd $ATUAL
}

bkpPIP(){
	cp ~/.mypypi ~/.mypypi-backup -r

}
# alias pnpm='pnpm --offline'














